{
  "config" : {
    "scriptInfo" : {
      "script" : "import com.flowable.core.common.api.security.SecurityScope;\nimport com.flowable.core.spring.security.SecurityUtils;\nimport com.flowable.platform.common.identitylink.PlatformIdentityLinkType;\nimport org.flowable.identitylink.api.IdentityLink;\nimport java.util.List;\n\n// Get userid of current user\nSecurityScope securityScope = SecurityUtils.getCurrentUserSecurityScope();\nString managerId = securityScope.getUserId(); // saves us passing in the logged in user\nString OWNER = \"owner\";\n\ndef theTaskId = flw.getInput(\"taskId\");\ndef assigneeId = flw.getInput(\"newAssignee\");\ndef currentAssignee = flw.getInput(\"currentAssignee\");\n\nflw.setOutput(\"result\", theTaskId);\n\nif(assigneeId == null) {\n  taskService.unclaim(theTaskId)\n} else {\n\t// if assignee has a value, set task assignee to null to prepare claim()\n\tif(currentAssignee != null) {\n  \t\ttaskService.setAssignee(theTaskId, null)\n\t}\n  \n\ttaskService.claim(theTaskId, assigneeId); // claim the task for now so propagation works\n\n    List<IdentityLink> listOfTaskIdentityLink = taskService.getIdentityLinksForTask(theTaskId);\n    boolean taskOwnerExists = listOfTaskIdentityLink.stream().anyMatch(link->link.getType().equalsIgnoreCase(PlatformIdentityLinkType.OWNER));\n    if(!taskOwnerExists) {\n        taskService.setOwner(theTaskId, managerId);\n    \tusaaIdentityLinkManager.propagateIdentityLink(theTaskId, managerId, PlatformIdentityLinkType.PARTICIPANT);\n    }\n    taskService.setAssignee(theTaskId, assigneeId); // Now reassign to selected user since manager propagation is done\n    usaaIdentityLinkManager.propagateIdentityLink(theTaskId, assigneeId, PlatformIdentityLinkType.PARTICIPANT);\n}\n",
      "language" : "groovy"
    }
  },
  "ignoreConfirmationMessage" : true,
  "botKey" : "platform-script-evaluation-bot",
  "name" : "CLAC-A-003 reassign Task",
  "key" : "cLACA002ReassignTask"
}