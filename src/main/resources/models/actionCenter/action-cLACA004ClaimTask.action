{
  "config" : {
    "scriptInfo" : {
      "script" : "import com.flowable.core.common.api.security.SecurityScope;\nimport com.flowable.core.spring.security.SecurityUtils;\nimport com.flowable.platform.common.identitylink.PlatformIdentityLinkType;\nimport org.flowable.identitylink.api.IdentityLink;\nimport java.util.List;\nimport com.flowable.idm.engine.impl.util.UserUtil;\nimport org.apache.commons.lang3.StringUtils;\n\nString ID_POSTFIX = \"@eagle.usaa.com\"; // postfix to convert eagle ID to login id\nString OWNER = \"owner\";\n// Get userid and groups to add to the query\nSecurityScope securityScope = SecurityUtils.getCurrentUserSecurityScope();\nString userId = securityScope.getUserId(); // saves us passing in the userid\n\nString managerId = null;\nString managerFull = null;\n\n// Get the user's manager ID from userInfo\n// Sample format of manager string\n// CN=White\\, Kevin (PLQ6047),OU=USERS,OU=IT,OU=COSAs,DC=eagle,DC=usaa,DC=com\n\ndef platformUser = platformIdentityService.createPlatformUserQuery()\n                      .userId(userId)\n                      .includeIdentityInfo()\n                      .singleResult();\nmanagerFull = UserUtil.findUserInfo(\"manager\", platformUser);\n\nif(managerFull != null){\n  managerId = StringUtils.substringBetween(managerFull, \"(\", \")\");\n  managerId +=ID_POSTFIX; // Add the email portion to match login id\n}\n// Get the task Id to reassign\ndef taskId = flw.getInput(\"taskId\");\ndef assignee = flw.getInput(\"assignee\");\n\n// if assignee has a value, set task assignee to null to prepare claim()\nif(assignee!=null){\n  taskService.setAssignee(taskId, null);\n}\n\ntaskService.claim(taskId, userId);\n// Below code to be discussed for claim a task, don't delete.\nusaaIdentityLinkManager.propagateIdentityLink(taskId, userId, PlatformIdentityLinkType.PARTICIPANT);\nif(managerId!=null){\n    List<IdentityLink> listOfTaskIdentityLink = taskService.getIdentityLinksForTask(taskId);\n    boolean taskOwnerExists = listOfTaskIdentityLink.stream().anyMatch(link->link.getType().equalsIgnoreCase(PlatformIdentityLinkType.OWNER));\n    if(!taskOwnerExists) {\n   \t\ttaskService.addUserIdentityLink(taskId, managerId, PlatformIdentityLinkType.OWNER);\n    }\n    usaaIdentityLinkManager.propagateIdentityLink(taskId, managerId, PlatformIdentityLinkType.PARTICIPANT);\n  }",
      "language" : "groovy"
    }
  },
  "ignoreConfirmationMessage" : true,
  "botKey" : "platform-script-evaluation-bot",
  "name" : "CLAC-A-004 Claim Task",
  "key" : "cLACA004ClaimTask"
}