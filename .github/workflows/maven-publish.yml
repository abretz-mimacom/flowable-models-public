# This workflow will build a package using Maven and then publish it to GitHub packages and Docker registry when a release is created

name: Maven Package

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Maven settings.xml
      run: |
        mkdir -p $HOME/.m2
        cat > $HOME/.m2/settings.xml <<EOF
        <settings>
          <servers>
            <server>
              <id>git-maven</id>
              <username>${{ github.actor }}</username>
              <password>${{ secrets.GITHUB_TOKEN }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $HOME/.m2/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract artifact name and version from pom.xml
      id: artifact
      run: |
        ARTIFACT_ID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)
        VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Log in to Docker registry for base image
      uses: docker/login-action@v3
      with:
        registry: repo.flowable.com/docker/flowable/flowable-work
        username: ${{ secrets.DOCKER_PULL_USERNAME }}
        password: ${{ secrets.DOCKER_PULL_PASSWORD }}
        
    - name: Build Docker image
      run: |
        docker build \
          --build-arg JAR_FILE=target/${{ steps.artifact.outputs.artifact_id }}-${{ steps.artifact.outputs.version }}.jar \
          -t ghcr.io/${{ github.repository_owner }}/flowable-models-public:${{ steps.artifact.outputs.version }} \
          -t ghcr.io/${{ github.repository_owner }}/flowable-models-public:latest \
          .

    - name: Push Docker image (version tag)
      run: docker push ghcr.io/${{ github.repository_owner }}/flowable-models-public:${{ steps.artifact.outputs.version }}

    - name: Push Docker image (latest tag)
      run: docker push ghcr.io/${{ github.repository_owner }}/flowable-models-public:latest
